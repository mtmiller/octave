%{

////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 1995-2023 The Octave Project Developers
//
// See the file COPYRIGHT.md in the top-level directory of this
// distribution or <https://octave.org/copyright/>.
//
// This file is part of Octave.
//
// Octave is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Octave is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Octave; see the file COPYING.  If not, see
// <https://www.gnu.org/licenses/>.
//
// NOTE: gperf 2.7.2 will silently generate bad code if there are blank
// lines following the "%{" marker above.  This comment block seems to be
// handled correctly.
//
////////////////////////////////////////////////////////////////////////

enum octave_kw_id
{
  arguments_kw,
  break_kw,
  case_kw,
  catch_kw,
  classdef_kw,
  continue_kw,
  do_kw,
  else_kw,
  elseif_kw,
  end_kw,
  end_try_catch_kw,
  end_unwind_protect_kw,
  endarguments_kw,
  endclassdef_kw,
  endenumeration_kw,
  endevents_kw,
  endfor_kw,
  endfunction_kw,
  endif_kw,
  endmethods_kw,
  endparfor_kw,
  endproperties_kw,
  endspmd_kw,
  endswitch_kw,
  endwhile_kw,
  enumeration_kw,
  events_kw,
  for_kw,
  function_kw,
  get_kw,
  global_kw,
  if_kw,
  magic_file_kw,
  magic_line_kw,
  methods_kw,
  otherwise_kw,
  parfor_kw,
  persistent_kw,
  properties_kw,
  return_kw,
  set_kw,
  spmd_kw,
  switch_kw,
  try_kw,
  until_kw,
  unwind_protect_kw,
  unwind_protect_cleanup_kw,
  while_kw
};

%}

struct octave_kw { const char *name; int tok; octave_kw_id kw_id; };

%%
arguments, ARGUMENTS, arguments_kw
break, BREAK, break_kw
case, CASE, case_kw
catch, CATCH, catch_kw
classdef, CLASSDEF, classdef_kw
continue, CONTINUE, continue_kw
do, DO, do_kw
else, ELSE, else_kw
elseif, ELSEIF, elseif_kw
end, END, end_kw
end_try_catch, END, end_try_catch_kw
end_unwind_protect, END, end_unwind_protect_kw
endarguments, END, endarguments_kw
endclassdef, END, endclassdef_kw
endenumeration, END, endenumeration_kw
endevents, END, endevents_kw
endfor, END, endfor_kw
endfunction, END, endfunction_kw
endif, END, endif_kw
endmethods, END, endmethods_kw
endparfor, END, endparfor_kw
endproperties, END, endproperties_kw
endspmd, END, endspmd_kw
endswitch, END, endswitch_kw
endwhile, END, endwhile_kw
enumeration, ENUMERATION, enumeration_kw
events, EVENTS, events_kw
for, FOR, for_kw
function, FCN, function_kw
get, GET, get_kw
global, GLOBAL, global_kw
if, IF, if_kw
methods, METHODS, methods_kw
otherwise, OTHERWISE, otherwise_kw
parfor, PARFOR, parfor_kw
persistent, PERSISTENT, persistent_kw
properties, PROPERTIES, properties_kw
return, FUNC_RET, return_kw
set, SET, set_kw
spmd, SPMD, spmd_kw
switch, SWITCH, switch_kw
try, TRY, try_kw
until, UNTIL, until_kw
unwind_protect, UNWIND, unwind_protect_kw
unwind_protect_cleanup, CLEANUP, unwind_protect_cleanup_kw
while, WHILE, while_kw
__FILE__, DQ_STRING, magic_file_kw
__LINE__, NUMBER, magic_line_kw
