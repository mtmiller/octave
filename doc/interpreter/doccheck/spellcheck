#!/usr/bin/perl -w

########################################################################
##
## Copyright (C) 2010-2023 The Octave Project Developers
##
## See the file COPYRIGHT.md in the top-level directory of this
## distribution or <https://octave.org/copyright/>.
##
## This file is part of Octave.
##
## Octave is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## Octave is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Octave; see the file COPYING.  If not, see
## <https://www.gnu.org/licenses/>.
##
########################################################################

################################################################################
# File   : spellcheck
# Purpose: Spellcheck a single Texinfo file
#          written in Perl, rather than the shell, to be more portable to OS
#          without good command lines such as Windows.
# Usage  : spellcheck FILENAME.texi
# Documentation: see README in doccheck directory
################################################################################
use File::Temp ":POSIX";

# Initialize variables
# Octave specific configuration file for aspell
$aspell_conf = './doccheck/aspell.conf';

################################################################################
# Parse command line arguments
if (@ARGV != 1)
{
  die ("USAGE: spellcheck <filename.texi>\n",
       "       invoked from doc/interpreter directory\n");
}

################################################################################
# Run aspell with Octave-specific configuration file.
# Avoid use of pipes and use temporary files for portability
$fname = shift(@ARGV);
$tmp_fname = &tmpnam();  # from File::Temp
system ("aspell --conf=$aspell_conf list < $fname > $tmp_fname");

if ($?)
{
  unlink ($tmp_fname);
  die ("aspell command unsuccessful.  Cannot continue\n");
}

open (FH, "<$tmp_fname")
  or die "Unable to open misspelled words file: $tmp_fname\n";
while (<FH>) { $words{$_} = 1; }
close (FH);

# Print out sorted and uniquified list of misspelled words
print sort { uc($a) cmp uc ($b) } keys(%words);

################################################################################
# Clean up temporary files
unlink ($tmp_fname) or die "Unable to delete temporary file: $tmp_fname\n";
