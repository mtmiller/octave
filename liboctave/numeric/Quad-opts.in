########################################################################
##
## Copyright (C) 2002-2023 The Octave Project Developers
##
## See the file COPYRIGHT.md in the top-level directory of this
## distribution or <https://octave.org/copyright/>.
##
## This file is part of Octave.
##
## Octave is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## Octave is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Octave; see the file COPYING.  If not, see
## <https://www.gnu.org/licenses/>.
##
########################################################################

CLASS = "Quad"

OPTION
  NAME = "absolute tolerance"
  DOC_ITEM
Absolute tolerance; may be zero for pure relative error test.

  END_DOC_ITEM
  TYPE = "double"
  INIT_VALUE = "::sqrt (std::numeric_limits<double>::epsilon ())"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "relative tolerance"
  DOC_ITEM
Non-negative relative tolerance.  If the absolute tolerance is zero,
the relative tolerance must be greater than or equal to
@w{@code{max (50*eps, 0.5e-28)}}.

  END_DOC_ITEM
  TYPE = "double"
  INIT_VALUE = "::sqrt (std::numeric_limits<double>::epsilon ())"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "single precision absolute tolerance"
  DOC_ITEM
Absolute tolerance for single precision; may be zero for pure relative
error test.

  END_DOC_ITEM
  TYPE = "float"
  INIT_VALUE = "::sqrt (std::numeric_limits<float>::epsilon ())"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "single precision relative tolerance"
  DOC_ITEM
Non-negative relative tolerance for single precision.  If the absolute
tolerance is zero, the relative tolerance must be greater than or equal to
@w{@code{max (50*eps, 0.5e-28)}}.
  END_DOC_ITEM
  TYPE = "float"
  INIT_VALUE = "::sqrt (std::numeric_limits<float>::epsilon ())"
  SET_EXPR = "val"
END_OPTION
